name: CI

on:
  # 모든 PR이 열리거나 업데이트될 때
  pull_request:
  
  # develop 브랜치에 push될 때
  push:
    branches: [ develop ]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Run Kotlin Lint
      run: ./gradlew lintKotlin
      
    - name: Build project
      run: ./gradlew build -x test
      
    - name: Upload build reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-reports
        path: |
          build/reports/
          build/test-results/
        retention-days: 30
        
    - name: Comment PR with build status
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const { context, github } = require('@actions/github');
          const runStatus = '${{ job.status }}';
          const runUrl = `${context.payload.repository.html_url}/actions/runs/${context.runId}`;
          
          let message = '';
          if (runStatus === 'success') {
            message = '✅ **CI 검사 통과**\n- 빌드: 성공\n- 린트: 통과';
          } else {
            message = '❌ **CI 검사 실패**\n- 빌드 또는 린트에서 문제가 발생했습니다.';
          }
          
          message += `\n\n[상세 로그 보기](${runUrl})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });